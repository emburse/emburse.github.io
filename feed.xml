<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://emburse.github.io/</id><title>Emburse Engineering Blog</title><subtitle>'Share, learn, innovate: A Blog for Emburse Engineering'</subtitle> <updated>2022-06-01T19:24:18+00:00</updated> <author> <name>Emburse</name> <uri>https://emburse.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://emburse.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://emburse.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> Â© 2022 Emburse </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How not to terraform - AWS security groups</title><link href="https://emburse.github.io/posts/how-not-to-terraform-security-groups/" rel="alternate" type="text/html" title="How not to terraform - AWS security groups" /><published>2022-02-25T00:00:00+00:00</published> <updated>2022-06-01T18:56:54+00:00</updated> <id>https://emburse.github.io/posts/how-not-to-terraform-security-groups/</id> <content src="https://emburse.github.io/posts/how-not-to-terraform-security-groups/" /> <author> <name>{"name"=>"Bevan Bennett"}</name> </author> <category term="How-To" /> <summary> Being an exploration of the many ways to manage AWS security groups using terraform and some of the corresponding gotchas you are likely to encounter. Our scenario For this discussion, imagine the following scenario. We have a webservice in an AWS VPC that we want to allow restricted access to. This webservice is part of production infrastructure and needs to be accessible from other sys... </summary> </entry> </feed>
